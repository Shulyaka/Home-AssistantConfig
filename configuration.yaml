
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
homeassistant:
  customize: !include customize.yaml
  customize_glob:
    "input_boolean.tosr0x_*_state":
      hidden: true

logbook:
  exclude:
    entities:
      - automation.update_tosr0x
      - automation.update_tosr0x_temp
      - automation.update_tosr0x_switch

# Internal hidden variables to hold TOSR0X relay state
input_boolean:
  tosr0x_1_state:
    name: TOSR0X Relay 1 State
  tosr0x_2_state:
    name: TOSR0X Relay 2 State
  tosr0x_3_state:
    name: TOSR0X Relay 3 State
  tosr0x_4_state:
    name: TOSR0X Relay 4 State

# Internal variable to hold TOSR0X-T temperature
input_number:
  tosr0x_temp:
    name: TOSR0X-T Temperature State
    min: -55
    max: 125
    step: 0.125
    mode: box
    unit_of_measurement: '°C'
    icon: mdi:temperature-celsius

http:
  use_x_forwarded_for: true
  trusted_proxies: 127.0.0.1
  server_host: 127.0.0.1
  base_url: https://shulyaka.org.ru
  cors_allowed_origins: https://shulyaka.org.ru

recorder:
  db_url: mysql+pymysql://@/hass_db?unix_socket=/var/run/mysql/mysql.sock&charset=utf8

logger:
  default: debug

google_assistant:
  project_id: home-assistant-1404b
  api_key: !secret google_assistant

notify:
  - platform: html5
    name: html5
    vapid_pub_key: BA0ufUCAkPCSdEJBl2sStgZNOQicKJyEZnlTZvgPEOVG4HkJrafP7IcWHa-OSOON0EAAEUa9YoDqpPA-N3OCYVU
    vapid_prv_key: !secret web_push
    vapid_email: Shulyaka@gmail.com
  - platform: syslog
    name: syslog

shell_command:
  hassd_update: /usr/lib/hassd/hassd_update.sh

zha:
  usb_path: /dev/ttyS1
  database_path: /srv/hass/zigbee.db
  radio_type: xbee
  baudrate: 9600

sensor:
  - platform: rest
    resource: http://watercounter/cgi-bin/wcounter.sh
    name: wcounter
    value_template: 'Available'
    device_class: signal_strength
    json_attributes: counters
  - platform: template
    sensors:
      counter_0:
        friendly_name_template: "{{state_attr('sensor.wcounter', 'counters')[0].name.capitalize()}} counter"
        unit_of_measurement: 'm³'
        icon_template: mdi:speedometer
        value_template: "{{'%.3f'|format(state_attr('sensor.wcounter', 'counters')[0].value/1000)}}"
        attribute_templates:
          serial: "{{state_attr('sensor.wcounter', 'counters')[0].serial}}"
          state: "{{'%d%%'|format(state_attr('sensor.wcounter', 'counters')[0].state*100/15)}}"
          lastaction: "{{state_attr('sensor.wcounter', 'counters')[0].lastaction}}"
          name: "{{state_attr('sensor.wcounter', 'counters')[0].name}}"
      counter_1:
        friendly_name_template: "{{state_attr('sensor.wcounter', 'counters')[1].name.capitalize()}} counter"
        unit_of_measurement: 'm³'
        icon_template: mdi:speedometer
        value_template: "{{'%.3f'|format(state_attr('sensor.wcounter', 'counters')[1].value/1000)}}"
        attribute_templates:
          serial: "{{state_attr('sensor.wcounter', 'counters')[1].serial}}"
          state: "{{'%d%%'|format(state_attr('sensor.wcounter', 'counters')[1].state*100/15)}}"
          lastaction: "{{state_attr('sensor.wcounter', 'counters')[1].lastaction}}"
          name: "{{state_attr('sensor.wcounter', 'counters')[1].name}}"
      counter_2:
        friendly_name_template: "{{state_attr('sensor.wcounter', 'counters')[2].name.capitalize()}} counter"
        unit_of_measurement: 'm³'
        icon_template: mdi:speedometer
        value_template: "{{'%.3f'|format(state_attr('sensor.wcounter', 'counters')[2].value/1000)}}"
        attribute_templates:
          serial: "{{state_attr('sensor.wcounter', 'counters')[2].serial}}"
          state: "{{'%d%%'|format(state_attr('sensor.wcounter', 'counters')[2].state*100/15)}}"
          lastaction: "{{state_attr('sensor.wcounter', 'counters')[2].lastaction}}"
          name: "{{state_attr('sensor.wcounter', 'counters')[2].name}}"
  - platform: template
    sensors:
      tosr0x_temperature:
        friendly_name: TOSR0X-T Temperature
        entity_id: input_number.tosr0x_temp
        value_template: "{{ states.input_number.tosr0x_temp.state }}"
        device_class: temperature
        unit_of_measurement: '°C'

switch:
  - platform: rest
    resource: http://watercounter/cgi-bin/wcontrol.sh?valve=hot
    name: Hot water
    body_on: '{"function": "open"}'
    body_off: '{"function": "close"}'
    is_on_template: '{{ value_json.lastaction == "open" }}'
  - platform: rest
    resource: http://watercounter/cgi-bin/wcontrol.sh?valve=cold
    name: Cold water
    body_on: '{"function": "open"}'
    body_off: '{"function": "close"}'
    is_on_template: '{{ value_json.lastaction == "open" }}'
  - platform: rest
    resource: http://watercounter/cgi-bin/wcontrol.sh?valve=toilet
    name: Toilet water
    body_on: '{"function": "open"}'
    body_off: '{"function": "close"}'
    is_on_template: '{{ value_json.lastaction == "open" }}'
  - platform: template
    switches:
      tosr0x_1:
        friendly_name: TOSR0X Relay 1
        value_template: "{{ is_state('input_boolean.tosr0x_1_state', 'on') }}"
        turn_on:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:40:f5:2a:be
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "e["  # First character is to control the switch. Second character ('[') is to request an update of the switch states from the device in order to double confirm
          - service: input_boolean.turn_on  # Update switch state instantly without waiting for the update from the device (aka optimistic mode)
            data:
              entity_id: input_boolean.tosr0x_1_state
        turn_off:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:40:f5:2a:be
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "o["
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.tosr0x_1_state
      tosr0x_2:
        friendly_name: TOSR0X Relay 2
        value_template: "{{ is_state('input_boolean.tosr0x_2_state', 'on') }}"
        turn_on:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:40:f5:2a:be
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "f["
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.tosr0x_2_state
        turn_off:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:40:f5:2a:be
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "p["
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.tosr0x_2_state
      tosr0x_3:
        friendly_name: TOSR0X Relay 3
        value_template: "{{ is_state('input_boolean.tosr0x_3_state', 'on') }}"
        turn_on:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:40:f5:2a:be
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "g["
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.tosr0x_3_state
        turn_off:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:40:f5:2a:be
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "q["
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.tosr0x_3_state
      tosr0x_4:
        friendly_name: TOSR0X Relay 4
        value_template: "{{ is_state('input_boolean.tosr0x_4_state', 'on') }}"
        turn_on:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:40:f5:2a:be
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "h["
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.tosr0x_4_state
        turn_off:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:40:f5:2a:be
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "r["
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.tosr0x_4_state

rest_command:
  set_counter:
    url: "http://watercounter/cgi-bin/wcontrol.sh?function=set&valve={{name}}&value={{'%d'|format(value|float*1000)}}"
  mos_ru_update:
    url: "http://watercounter/cgi-bin/mos_ru_update.sh"
