
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

frontend:
#  development_repo: /usr/share/nas/other/home-assistant-polymer

conversation:

discovery:
  enable:
    - dlna_dmr

# Text to speech
tts:
  - platform: google_translate
    base_url: https://shulyaka.org.ru

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
homeassistant:
  customize: !include customize.yaml

logbook:
  exclude:
    entities:
      - automation.tosr0x_request
      - automation.tosr0x_response_temp
      - automation.tosr0x_response_switch
      - input_boolean.tosr0x_1_state
      - input_boolean.tosr0x_2_state
      - input_boolean.tosr0x_3_state
      - input_boolean.tosr0x_4_state

# Internal hidden variables to hold TOSR0X relay state
input_boolean:
  tosr0x_1_state:
    name: TOSR0X Relay 1 State
  tosr0x_2_state:
    name: TOSR0X Relay 2 State
  tosr0x_3_state:
    name: TOSR0X Relay 3 State
  tosr0x_4_state:
    name: TOSR0X Relay 4 State
  humidifier_zone_1:
    name: Humidifier Zone 1
    initial: false
  humidifier_zone_2:
    name: Humidifier Zone 2
    initial: false
  humidifier_zone_3:
    name: Humidifier Zone 3
    initial: false

# Internal variable to hold TOSR0X-T temperature
input_number:
  tosr0x_temp:
    name: TOSR0X-T Temperature State
    min: -55
    max: 125
    step: 0.125
    mode: box
    unit_of_measurement: '°C'
    icon: mdi:temperature-celsius
  pump_strength:
    name: Humidifier Pump Strength
    min: 0
    max: 1023
    mode: slider

http:
  use_x_forwarded_for: true
  trusted_proxies: 127.0.0.1
  server_host: 127.0.0.1
  cors_allowed_origins: https://shulyaka.org.ru

recorder:
  db_url: mysql+pymysql://@/hass_db?unix_socket=/var/run/mysql/mysql.sock&charset=utf8

logger:
#  default: debug
  default: info
  logs:
#    homeassistant.components.shell_command: debug
#    pyipp.parser: info
#    haphilipsjs: info
#    zeroconf: info
#    async_upnp_client.traffic: info
#    homeassistant.helpers.storage: info
#    homeassistant.components.sun: info
#    homeassistant.components.ipp: info
#    homeassistant.components.hue: info
#    homeassistant.components.ssdp: info
#    homeassistant.components.history: info
#    homeassistant.components.recorder: info
#    homeassistant.components.websocket_api: info
#    homeassistant.components.webhook: info
#    homeassistant.components.mobile_app.webhook: info
#    homeassistant.components.neato: info
#    homeassistant.components.neato.camera: info
#    homeassistant.components.neato.switch: info
#    homeassistant.components.neato.vacuum: info
#    homeassistant.components.neato.sensor: info
#    homeassistant.components.http.auth: info
#    homeassistant.components.http.view: info
#    homeassistant.components.rest.sensor: info
#    homeassistant.components.dlna_dmr.media_player: info
    zigpy_xbee.uart: debug
    zigpy_xbee.api: debug
    zigpy.zcl: debug

google_assistant:
  project_id: home-assistant-1404b
#  api_key: !secret google_assistant
  service_account: !include service_account.json
  report_state: true
  entity_config:
    vacuum.robot:
      expose: false
    light.hue_color_candle_1:
      expose: false
    light.hue_color_candle_2:
      expose: false
    light.hue_color_candle_3:
      expose: false
    light.hue_color_candle_4:
      expose: false
    light.hue_color_candle_5:
      expose: false
    light.hue_color_candle_6:
      expose: false
    light.hue_color_candle_7:
      expose: false
    light.hue_color_candle_8:
      expose: false
    light.hue_color_lamp_1:
      expose: false
    light.hue_color_lamp_2:
      expose: false
    light.hue_color_lamp_3:
      expose: false
    light.hue_color_spot_1:
      expose: false
    light.hue_color_spot_2:
      expose: false
    light.bathroom:
      expose: false
    light.children_room:
      expose: false
    light.custom_group_for_roombl:
      expose: false
    light.custom_group_for_roombl_2:
      expose: false
    light.custom_group_for_roombr:
      expose: false
    light.custom_group_for_roombr_2:
      expose: false
    light.custom_group_for_roomtl:
      expose: false
    light.custom_group_for_roomtl_2:
      expose: false
    light.custom_group_for_roomtr:
      expose: false
    light.custom_group_for_roomtr_2:
      expose: false
    light.kitchen:
      expose: false
    light.living_room:
      expose: false
    light.razvlecheniia_1:
      expose: false
    light.sleeping_room:
      expose: false
    sensor.tosr0x_temperature:
      expose: false
    input_boolean.humidifier_zone_1:
      expose: false
    input_boolean.humidifier_zone_2:
      expose: false
    input_boolean.humidifier_zone_3:
      expose: false
    input_boolean.tosr0x_1_state:
      expose: false
    input_boolean.tosr0x_2_state:
      expose: false
    input_boolean.tosr0x_3_state:
      expose: false
    input_boolean.tosr0x_4_state:
      expose: false
    switch.tosr0x_1:
      expose: false
    switch.tosr0x_2:
      expose: false
    switch.tosr0x_3:
      expose: false
    switch.tosr0x_4:
      expose: false
    group.tosr0x:
      expose: false
    switch.humidifier_pump:
      expose: false
    switch.humidifier_aux_led:
      expose: false
    switch.humidifier_fan:
      expose: false
    light.lumi_lumi_relay_c2acn01_2321e803_2:
      expose: false

alexa:
  smart_home:
    endpoint: https://api.amazonalexa.com/v3/events
    client_id: amzn1.application-oa2-client.a9df13cdb9ec4b5a8c0ff2cf941f782a
    client_secret: !secret alexa_client_secret
    filter:
      exclude_domains:
        - input_number
        - input_boolean
        - automation
        - group
      exclude_entity_globs:
        - light.hue_*
        - light.custom_group_for_room*
        - switch.tosr0x_*
        - switch.humidifier_*
      exclude_entities:
        - light.bathroom
        - light.children_room
        - light.kitchen
        - light.living_room
        - light.sleeping_room
        - light.razvlecheniia_1
        - light.lumi_lumi_relay_c2acn01_2321e803_2
        - sensor.tosr0x_temperature
        - binary_sensor.updater
    entity_config:
      light.lumi_lumi_relay_fan:
        display_categories: FAN

mycroft:
  host: speaker

almond:
  type: local
  host: http://speaker:3000

notify:
  - platform: html5
    name: html5
    vapid_pub_key: BA0ufUCAkPCSdEJBl2sStgZNOQicKJyEZnlTZvgPEOVG4HkJrafP7IcWHa-OSOON0EAAEUa9YoDqpPA-N3OCYVU
    vapid_prv_key: !secret web_push
    vapid_email: Shulyaka@gmail.com
  - platform: syslog
    name: syslog
  - platform: mycroft
    name: mycroft

shell_command:
  hassd_update: /usr/lib/hassd/hassd_update.sh
  hass_upgrade: bash -c "nohup /home/homeassistant/upgrade.sh restart 0<&- &>/dev/null &"

zha:
  database_path: /srv/hass/zigbee.db

media_player:
  - platform: philips_js
    host: 192.168.1.103
    name: Philips TV JS
  - platform: dlna_dmr
    url: http://192.168.1.103:49153/nmrDescription.xml
    name: Philips TV DLNA
  - platform: universal
    name: Philips TV
    children:
      - media_player.philips_tv_js
      - media_player.philips_tv_2
  - platform: mpd
    host: speaker

media_extractor:

sensor:
  - platform: rest
    resource: http://watercounter.atlantis/cgi-bin/wcounter.sh
    name: wcounter
    value_template: 'Available'
    device_class: signal_strength
    json_attributes: counters
  - platform: template
    sensors:
      counter_0:
        friendly_name_template: "{{state_attr('sensor.wcounter', 'counters')[0].name.capitalize()}} counter"
        unit_of_measurement: 'm³'
        icon_template: mdi:speedometer
        value_template: "{{'%.3f'|format(state_attr('sensor.wcounter', 'counters')[0].value/1000)}}"
        attribute_templates:
          serial: "{{state_attr('sensor.wcounter', 'counters')[0].serial}}"
          state: "{{'%d%%'|format(state_attr('sensor.wcounter', 'counters')[0].state*100/15)}}"
          lastaction: "{{state_attr('sensor.wcounter', 'counters')[0].lastaction}}"
          name: "{{state_attr('sensor.wcounter', 'counters')[0].name}}"
      counter_1:
        friendly_name_template: "{{state_attr('sensor.wcounter', 'counters')[1].name.capitalize()}} counter"
        unit_of_measurement: 'm³'
        icon_template: mdi:speedometer
        value_template: "{{'%.3f'|format(state_attr('sensor.wcounter', 'counters')[1].value/1000)}}"
        attribute_templates:
          serial: "{{state_attr('sensor.wcounter', 'counters')[1].serial}}"
          state: "{{'%d%%'|format(state_attr('sensor.wcounter', 'counters')[1].state*100/15)}}"
          lastaction: "{{state_attr('sensor.wcounter', 'counters')[1].lastaction}}"
          name: "{{state_attr('sensor.wcounter', 'counters')[1].name}}"
      counter_2:
        friendly_name_template: "{{state_attr('sensor.wcounter', 'counters')[2].name.capitalize()}} counter"
        unit_of_measurement: 'm³'
        icon_template: mdi:speedometer
        value_template: "{{'%.3f'|format(state_attr('sensor.wcounter', 'counters')[2].value/1000)}}"
        attribute_templates:
          serial: "{{state_attr('sensor.wcounter', 'counters')[2].serial}}"
          state: "{{'%d%%'|format(state_attr('sensor.wcounter', 'counters')[2].state*100/15)}}"
          lastaction: "{{state_attr('sensor.wcounter', 'counters')[2].lastaction}}"
          name: "{{state_attr('sensor.wcounter', 'counters')[2].name}}"
  - platform: template
    sensors:
      tosr0x_temperature:
        friendly_name: TOSR0X-T Temperature
        value_template: "{{ states('input_number.tosr0x_temp') }}"
        device_class: temperature
        unit_of_measurement: '°C'

switch:
  - platform: rest
    resource: http://watercounter.atlantis/cgi-bin/wcontrol.sh?valve=hot
    name: Hot water
    body_on: '{"function": "open"}'
    body_off: '{"function": "close"}'
    is_on_template: '{{ value_json.lastaction == "open" }}'
  - platform: rest
    resource: http://watercounter.atlantis/cgi-bin/wcontrol.sh?valve=cold
    name: Cold water
    body_on: '{"function": "open"}'
    body_off: '{"function": "close"}'
    is_on_template: '{{ value_json.lastaction == "open" }}'
  - platform: rest
    resource: http://watercounter.atlantis/cgi-bin/wcontrol.sh?valve=toilet
    name: Toilet water
    body_on: '{"function": "open"}'
    body_off: '{"function": "close"}'
    is_on_template: '{{ value_json.lastaction == "open" }}'
  - platform: template
    switches:
      tosr0x_1:
        friendly_name: TOSR0X Relay 1
        value_template: "{{ is_state('input_boolean.tosr0x_1_state', 'on') }}"
        turn_on:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:41:a0:7e:1a
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "e["  # First character is to control the switch. Second character ('[') is to request an update of the switch states from the device in order to double confirm
          - service: input_boolean.turn_on  # Update switch state instantly without waiting for the update from the device (aka optimistic mode)
            data:
              entity_id: input_boolean.tosr0x_1_state
        turn_off:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:41:a0:7e:1a
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "o["
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.tosr0x_1_state
      tosr0x_2:
        friendly_name: TOSR0X Relay 2
        value_template: "{{ is_state('input_boolean.tosr0x_2_state', 'on') }}"
        turn_on:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:41:a0:7e:1a
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "f["
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.tosr0x_2_state
        turn_off:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:41:a0:7e:1a
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "p["
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.tosr0x_2_state
      tosr0x_3:
        friendly_name: TOSR0X Relay 3
        value_template: "{{ is_state('input_boolean.tosr0x_3_state', 'on') }}"
        turn_on:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:41:a0:7e:1a
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "g["
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.tosr0x_3_state
        turn_off:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:41:a0:7e:1a
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "q["
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.tosr0x_3_state
      tosr0x_4:
        friendly_name: TOSR0X Relay 4
        value_template: "{{ is_state('input_boolean.tosr0x_4_state', 'on') }}"
        turn_on:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:41:a0:7e:1a
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "h["
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.tosr0x_4_state
        turn_off:
          - service: zha.issue_zigbee_cluster_command
            data:
              ieee: 00:13:a2:00:41:a0:7e:1a
              endpoint_id: 232
              cluster_id: 17
              cluster_type: in
              command: 0
              command_type: server
              args: "r["
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.tosr0x_4_state

rest_command:
  set_counter:
    url: "http://watercounter.atlantis/cgi-bin/wcontrol.sh?function=set&valve={{name}}&value={{'%d'|format(value|float*1000)}}"
  mos_ru_update:
    url: "http://watercounter.atlantis/cgi-bin/mos_ru_update.sh"

climate:
  - platform: generic_thermostat
    name: Humidifier fan
    target_sensor: sensor.tosr0x_temperature
    heater: switch.humidifier_fan
    min_temp: 20
    max_temp: 40
    ac_mode: true

generic_hygrostat:
  - name: Увлажнитель в спальне
    humidifier: input_boolean.humidifier_zone_1
    target_sensor: sensor.lumi_lumi_weather_3bfcf003_humidity
    min_humidity: 15
    max_humidity: 100
    target_humidity: 50
    dry_tolerance: 3
    wet_tolerance: 0
    min_cycle_duration:
      minutes: 1
    initial_state: false
    away_humidity: 35
  - name: Увлажнитель в детской
    humidifier: input_boolean.humidifier_zone_2
    target_sensor: sensor.lumi_lumi_sens_48945e02_humidity
    min_humidity: 15
    max_humidity: 100
    target_humidity: 50
    dry_tolerance: 3
    wet_tolerance: 0
    min_cycle_duration:
      minutes: 1
    initial_state: false
    away_humidity: 35
  - name: Увлажнитель в гостиной
    humidifier: input_boolean.humidifier_zone_3
    target_sensor: sensor.lumi_lumi_sens_02fbebbd_1_1029
    min_humidity: 15
    max_humidity: 100
    target_humidity: 50
    dry_tolerance: 3
    wet_tolerance: 0
    min_cycle_duration:
      minutes: 1
    initial_state: false
    away_humidity: 35

hue:
  bridges:
    - host: 192.168.1.179
      allow_hue_groups: true

#light:
#  - platform: group
#    name: Children Room
#    entities:
#      - light.hue_color_candle_1
#      - light.hue_color_candle_2
#      - light.hue_color_candle_3
#      - light.hue_color_candle_4
#      - light.hue_color_candle_5
#      - light.hue_color_candle_6
#      - light.hue_color_candle_7
#      - light.hue_color_candle_8
